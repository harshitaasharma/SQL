CREATE DATABASE org;
SHOW DATABASES;
USE org;
CREATE TABLE worker(
WORKER_ID INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
FIRST_NAME CHAR(25),
LAST_NAME CHAR(25),
SALARY INT(25),
JOINING_DATE DATETIME,
DEPARTMENT CHAR(25)
);
SELECT * FROM worker;

INSERT INTO worker
(WORKER_ID,FIRST_NAME,LAST_NAME,SALARY,JOINING_DATE,DEPARTMENT) VALUES
(001,'Monika','Arora',100000,'14-02-20 09.00.00', 'HR'),
(002,'Niharika','Verma',800000,'14-06-11 09.00.00', 'Admin'),
(003,'Vishal','Singhal',300000,'14-02-20 09.00.00', 'HR'),
(004,'Amitabh','Singh',500000,'14-02-20 09.00.00', 'Admin'),
(005,'Vivek','Bhati',500000,'14-06-11 09.00.00', 'Admin'),
(006,'Vipul','Diwan',200000,'14-06-11 09.00.00', 'Account'),
(007,'Satish','Kumar',75000,'14-01-20 09.00.00', 'Account'),
(008,'Geetika','Chauhan',90000,'14-04-11 09.00.00', 'Admin');

CREATE TABLE Bonus(
WORKER_REF_ID INT,
BONUS_AMOUNT INT(10),
BONUS_DATE DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES Worker(Worker_id)
ON DELETE CASCADE
);
SELECT * FROM Bonus;

INSERT INTO Bonus
(WORKER_REF_ID,BONUS_AMOUNT,BONUS_DATE) VALUES
(001, 5000,'16-02-20'),
(002, 3000,'16-04-11'),
(003, 4000,'16-02-20'),
(001, 4500,'16-02-20'),
(002, 3500,'16-06-11');

CREATE TABLE Title(
WORKER_REF_ID INT,
WORKER_TITLE CHAR(25),
AFFECTED_FROM DATETIME,
FOREIGN KEY (WORKER_REF_ID)
REFERENCES worker(worker_id)
ON DELETE CASCADE);

INSERT INTO Title
(WORKER_REF_ID,WORKER_TITLE,AFFECTED_FROM) VALUES
(001,'Manager','2016-02-20'),
(002,'Executive','2016-06-11'),
(008,'Executive','2016-06-11'),
(005,'Manager','2016-06-11'),
(004,'Asst.Manager','2016-06-11'),
(007,'Executive','2016-06-11'),
(006,'Lead','2016-06-11'),
(003,'Lead','2016-06-11');

SELECT * FROM Title;

-- ALIAS
SELECT FIRST_NAME AS Worker_Name FROM Worker;

-- UPPERCASE
SELECT ucase(FIRST_NAME) FROM Worker;

-- UNIQUE VALUES OF DEPARTMENT FROM WORKER TABLE
SELECT DISTINCT department FROM Worker;
-- ALSO BY GROUP BY CLAUSE WITHOUT AGG FUNC
SELECT Department  FROM Worker GROUP BY(Department);

-- FIRST 3 CHAR FROM FIRST_NAME
SELECT SUBSTRING(DEPARTMENT,1,3) FROM WORKER;

-- POSITION OF ALPHABET 'b' IN FIRST_NAME COLM 'Amitabh' from worker
SELECT INSTR(FIRST_NAME,'B') FROM WORKER WHERE FIRST_NAME='AMITABH';

-- PRINT FIRST NAME WITHOUT WHITE SPACE FROM RIGHT SIDE 
SELECT RTRIM(FIRST_NAME) FROM WORKER;
-- PRINT FIRST NAME WITHOUT WHITE SPACE FROM LEFT SIDE 
SELECT LTRIM(FIRST_NAME) FROM WORKER;

-- UNIQUE VALUE OF DEPARTMENT WITH ITS STRING LENGTH
SELECT DISTINCT Department, LENGTH(Department) FROM Worker;

-- REPLACE a with A in first name
SELECT REPLACE(FIRST_NAME,'a','A') FROM Worker;

-- first name and last name into single colm complete name
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME)  AS Complete_Name FROM Worker;

-- ASC ORDER
SELECT * FROM WORKER ORDER BY FIRST_NAME ASC;

-- FIRSTNAME ASC AND DEPART DESC
SELECT * FROM WORKER ORDER BY FIRST_NAME ASC, DEPARTMENT DESC;

-- FIRST NAME VIPUL AND SATISH
SELECT * FROM WORKER WHERE FIRST_NAME='Vipul' or FIRST_NAME='Satish';
SELECT * FROM WORKER WHERE FIRST_NAME IN ('VIPUL', 'SATISH');
-- EXCLUDING VIPUL AND SATISH 
SELECT * FROM WORKER WHERE FIRST_NAME NOT IN ('VIPUL', 'SATISH');

-- PRINT DETAILS WHOSE FIRST NAME CONTAINS 'A'
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%A%';
-- ENDS WITH 'A'
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '%A';
-- ends with H but contains 6 char
SELECT * FROM WORKER WHERE FIRST_NAME LIKE '_____H';

-- salary between 1lakh and 5lakh
SELECT * FROM Worker WHERE SALARY BETWEEN 100000 AND 500000;

-- DETAILS WHO JOINED IN FEB 2014
SELECT * FROM Worker WHERE YEAR(JOINING_DATE)=2014 AND MONTH(JOINING_DATE)=02;

-- COUNT OF EMP IN ADMIN DEPARTMENT
SELECT Department, COUNT(Department) FROM Worker WHERE Department='Admin' GROUP BY( Department) ;

-- worker full name in slary >=50000 and <=100000
SELECT CONCAT(FIRST_NAME,' ',LAST_NAME)AS FULL_NAME, SALARY FROM Worker  WHERE SALARY BETWEEN 50000 AND 100000;

-- FETCH NO OF WORKER FOR EACH DEPART IN DESC ORDER
SELECT DEPARTMENT, COUNT(WORKER_ID) FROM WORKER  GROUP BY DEPARTMENT ORDER BY COUNT(WORKER_ID) DESC  ;

-- DETAILS OF EMPLOYEE WHO ARE MANAGER
SELECT * FROM Worker,Title WHERE Worker.Worker_id= Title.WORKER_REF_ID AND WORKER_TITLE='Manager';
-- or by inner join
SELECT w.* FROM Worker AS w INNER JOIN Title AS t ON W.Worker_id= T.WORKER_REF_ID AND t.WORKER_TITLE='Manager';

-- number of employe with work title should be more than 1
SELECT WORKER_TITLE, COUNT(*) FROM Title GROUP BY(Worker_title) HAVING COUNT(*)>1;

-- SHOW ONLY ODD ROWS FROM A TABLE
SELECT WORKER_TITLE, COUNT(*) FROM Title GROUP BY(Worker_title) HAVING COUNT(*)%2!=0;
SELECT WORKER_ID FROM WORKER WHERE WORKER_ID%2!=0;
SELECT WORKER_ID FROM WORKER WHERE MOD(WORKER_ID,2)!=0;
-- <> THIS IS ALSO NOT EQUAL

-- SQL QUERY TO CLONE A NEW TABLE FROM ANOTHER TABLE
CREATE TABLE Worker_clone LIKE Worker;
SELECT * FROM Worker_clone; -- schema copied
INSERT INTO Worker_clone SELECT * FROM Worker;

-- TO SHOW RECORDS OF 1 TABLE THAT OTHER TABLE DON'T HAVE
-- IE TO DO MINUS
SELECT W.* FROM WORKER AS W LEFT JOIN TITLE AS T ON W.WORKER_ID=T.WORKER_REF_ID WHERE T.WORKER_REF_ID IS NULL ;

-- CURRENT DATE AND TYM 
SELECT curdate();
SELECT curtime();
SELECT now(); -- displays both date and time

-- to show top n (say 5 ) records from a table in desc SALARY
SELECT * FROM Worker ORDER BY Salary DESC LIMIT 5;

-- WRITE SQL QUERY TO DETERMINE NTH SAY 5TH HIGHEST SALARY FROM TABLE
SELECT * FROM Worker ORDER BY Salary DESC LIMIT 4,1;
-- OR WITHOUT LIMIT


-- LIST EMPLOYEES WITH SAME SALARY 
SELECT * FROM Worker w1, Worker w2 WHERE w1.salary=w2.salary AND w1.worker_id <> w2.worker_id;

-- second highest salary from table
select *from Worker group by salary order by  salary desc limit 1,1;
-- OR
SELECT *,MAX(Salary) FROM Worker WHERE SALARY NOT IN(SELECT MAX(Salary) FROM Worker);

-- SQL QUERY TO SHOW 1 ROW TWICE
SELECT * FROM WORKER UNION ALL SELECT * FROM WORKER  ORDER BY Worker_id ;

-- SQL QUERY TO LIST WORKER ID WHO DID NOT GET BONUS
SELECT WORKER_ID FROM Worker WHERE Worker_id NOT IN(SELECT Worker_id FROM Worker AS w INNER JOIN Bonus AS b ON W.WORKER_ID=B.WORKER_REF_ID);

-- SQL QUERY TO FETCH FIRST 50% RECORD FROM TABLE
SELECT * FROM Worker WHERE Worker_id <= (SELECT COUNT(WORKER_ID)/2 FROM Worker);

-- FETCH DEPARTMENT THAT HAVE LESS THAN 4 PEOPLE IN IT
SELECT DEPARTMENT ,COUNT(*) FROM WORKER GROUP BY Department HAVING COUNT(*)<=4;

-- QUERY TO SHOW LAST RECORD FROM TABLE
SELECT * FROM WORKER WHERE Worker_id=(SELECT MAX(Worker_id) FROM Worker);

-- FETCH LAST 5 RECORDS FROM WORKER TABLE
(SELECT * FROM WORKER ORDER BY WORKER_ID DESC LIMIT 5) ORDER BY WORKER_ID;

-- NAME OF EMP HIGHEST SAL IN EACH DEPART
SELECT FIRST_NAME,MAX(SALARY),DEPARTMENT FROM WORKER GROUP BY DEPARTMENT;

-- 3 MAX SALARY 
SELECT * FROM WORKER 


